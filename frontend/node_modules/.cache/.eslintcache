[{"D:\\mongodbdemo\\src\\index.js":"1","D:\\mongodbdemo\\src\\reportWebVitals.js":"2","D:\\mongodbdemo\\src\\App.js":"3","D:\\mongodbdemo\\src\\Components\\NavBar.jsx":"4","D:\\mongodbdemo\\src\\Components\\CodeForStyle.jsx":"5","D:\\mongodbdemo\\src\\Components\\AddUser.jsx":"6","D:\\mongodbdemo\\src\\Components\\AllUsers.jsx":"7","D:\\mongodbdemo\\src\\Components\\NotFound.jsx":"8","D:\\mongodbdemo\\src\\Service\\api.js":"9","D:\\mongodbdemo\\src\\Components\\EditUser.jsx":"10","D:\\MERN_Stack test\\frontend\\src\\index.js":"11","D:\\MERN_Stack test\\frontend\\src\\reportWebVitals.js":"12","D:\\MERN_Stack test\\frontend\\src\\App.js":"13","D:\\MERN_Stack test\\frontend\\src\\Components\\NavBar.jsx":"14","D:\\MERN_Stack test\\frontend\\src\\Components\\AddUser.jsx":"15","D:\\MERN_Stack test\\frontend\\src\\Components\\AllUsers.jsx":"16","D:\\MERN_Stack test\\frontend\\src\\Components\\EditUser.jsx":"17","D:\\MERN_Stack test\\frontend\\src\\Components\\NotFound.jsx":"18","D:\\MERN_Stack test\\frontend\\src\\Components\\CodeForStyle.jsx":"19","D:\\MERN_Stack test\\frontend\\src\\Service\\api.js":"20"},{"size":502,"mtime":1641880461892,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":905,"mtime":1641931601690,"results":"24","hashOfConfig":"22"},{"size":811,"mtime":1641933130610,"results":"25","hashOfConfig":"22"},{"size":532,"mtime":1641901772850,"results":"26","hashOfConfig":"22"},{"size":2235,"mtime":1641928398143,"results":"27","hashOfConfig":"22"},{"size":2379,"mtime":1641932804869,"results":"28","hashOfConfig":"22"},{"size":109,"mtime":1641902468478,"results":"29","hashOfConfig":"22"},{"size":575,"mtime":1641963546845,"results":"30","hashOfConfig":"22"},{"size":2651,"mtime":1641931875613,"results":"31","hashOfConfig":"22"},{"size":502,"mtime":1641880461892,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":905,"mtime":1642345350346,"results":"35","hashOfConfig":"33"},{"size":811,"mtime":1641933130610,"results":"36","hashOfConfig":"33"},{"size":2653,"mtime":1642417945564,"results":"37","hashOfConfig":"33"},{"size":2492,"mtime":1642345282257,"results":"38","hashOfConfig":"33"},{"size":3008,"mtime":1642347036310,"results":"39","hashOfConfig":"33"},{"size":109,"mtime":1641902468478,"results":"40","hashOfConfig":"33"},{"size":532,"mtime":1641901772850,"results":"41","hashOfConfig":"33"},{"size":549,"mtime":1641990433978,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1of1ewy",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"esyc4n",{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"D:\\mongodbdemo\\src\\index.js",[],"D:\\mongodbdemo\\src\\reportWebVitals.js",[],"D:\\mongodbdemo\\src\\App.js",["88"],"import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Switch, Route, Routes } from \"react-router-dom\";\r\nimport NavBar from './Components/NavBar';\r\nimport CodeForStyle from './Components/CodeForStyle';\r\nimport AllUsers from './Components/AllUsers';\r\nimport AddUser from './Components/AddUser';\r\nimport NotFound from './Components/NotFound';\r\nimport EditUser from './Components/EditUser';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path='/' component={CodeForStyle} />\r\n                <Route exact path='/add' component={AddUser} />\r\n                <Route exact path='/all' component={AllUsers} />\r\n                <Route exact path='/edit/:id' component={EditUser} />\r\n                <Route component={NotFound} />\r\n            </Switch>    \r\n        </Router>      \r\n    );\r\n}\r\n\r\nexport default App;","D:\\mongodbdemo\\src\\Components\\NavBar.jsx",[],"D:\\mongodbdemo\\src\\Components\\CodeForStyle.jsx",[],"D:\\mongodbdemo\\src\\Components\\AddUser.jsx",["89"],"import react, { useState } from 'react';\r\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\r\nimport { addUser } from '../Service/api';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst initialValue = {\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    phone: ''\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        width: '50%',\r\n        margin: '5% 0 0 25%',\r\n        '& > *': {\r\n            marginTop: 20\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst AddUser = () => {\r\n        const [user, setUser] = useState(initialValue);\r\n        const { name, username, email, phone } = user;\r\n        const classes = useStyles();\r\n        let history = useHistory();\r\n\r\n        const onValueChange = (e) => {\r\n            setUser({...user, [e.target.name]: e.target.value}) \r\n        }\r\n\r\n        const addUserDeatils = async() => {\r\n            await addUser(user);\r\n            history.push('./all');\r\n        }\r\n\r\n\r\n    return(\r\n        <FormGroup className={classes.container}>\r\n            <Typography variant=\"h4\">Add User</Typography>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Email</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\"/>\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Phone</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" />\r\n            </FormControl>\r\n            <FormControl>\r\n                <Button variant=\"contained\" onClick={() => addUserDeatils()} color=\"primary\">Add User</Button>\r\n            </FormControl>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default AddUser;","D:\\mongodbdemo\\src\\Components\\AllUsers.jsx",["90"],"import { useState, useEffect } from 'react';\r\nimport { getUsers , deleteUser } from '../Service/api';\r\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: '90%',\r\n        margin: '50px 0 0 50px'\r\n    },\r\n    thead: {\r\n        '& > *': {\r\n            fontSize: 20,\r\n            background: '#000000',\r\n            color: '#FFFFFF'\r\n        }\r\n    },\r\n    row: {\r\n        '& > *': {\r\n            fontSize: 18\r\n        }\r\n    }\r\n})\r\n\r\nconst AllUsers = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getAllUsers();\r\n    }, []);\r\n\r\n    const deleteUserData = async (id) => {\r\n        await deleteUser(id);\r\n        getAllUsers();\r\n    }\r\n\r\n    const getAllUsers = async() => {\r\n        let response = await getUsers();\r\n        setUsers(response.data);\r\n    }\r\n\r\n    return (\r\n        <Table className={classes.table}>\r\n            <TableHead>\r\n                <TableRow className={classes.thead}>\r\n                    <TableCell>Id</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Username</TableCell>\r\n                    <TableCell>Email</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                    <TableCell></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {users.map(user => (\r\n                    <TableRow className={classes.row}>\r\n                        <TableCell>{user.id}</TableCell> \r\n                        <TableCell>{user.name}</TableCell>\r\n                        <TableCell>{user.username}</TableCell>\r\n                        <TableCell>{user.email}</TableCell>\r\n                        <TableCell>{user.phone}</TableCell>\r\n                        <TableCell>\r\n                            <Button  variant=\"contained\" style={{marginRight:10}} component={Link} to={`/edit/${user.id}`} >Edit</Button> \r\n                            <Button  variant=\"contained\" onClick={() => deleteUserData(user.id)}>Delete</Button> \r\n                        </TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AllUsers;","D:\\mongodbdemo\\src\\Components\\NotFound.jsx",[],"D:\\mongodbdemo\\src\\Service\\api.js",[],"D:\\mongodbdemo\\src\\Components\\EditUser.jsx",["91","92"],"import { useState, useEffect } from 'react';\r\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getUsers, editUser } from '../Service/api';\r\n\r\nconst initialValue = {\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    phone: ''\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        width: '50%',\r\n        margin: '5% 0 0 25%',\r\n        '& > *': {\r\n            marginTop: 20\r\n        }\r\n    }\r\n})\r\n\r\nconst EditUser = () => {\r\n    const [user, setUser] = useState(initialValue);\r\n    const { name, username, email, phone } = user;\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        loadUserDetails();\r\n    }, []);\r\n\r\n    const loadUserDetails = async() => {\r\n        const response = await getUsers(id);\r\n        setUser(response.data);\r\n    }\r\n\r\n    const editUserDetails = async() => {\r\n        const response = await editUser(id, user);\r\n        history.push('/all');\r\n    }\r\n\r\n    const onValueChange = (e) => {\r\n        console.log(e.target.value);\r\n        setUser({...user, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    return (\r\n        <FormGroup className={classes.container}>\r\n            <Typography variant=\"h4\">Edit Information</Typography>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Username</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='username' value={username} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Email</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='email' value={email} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Phone</InputLabel>\r\n                <Input onChange={(e) => onValueChange(e)} name='phone' value={phone} id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n            </FormControl>\r\n            <FormControl>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => editUserDetails()}>Edit User</Button>\r\n            </FormControl>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default EditUser;","D:\\MERN_Stack test\\frontend\\src\\index.js",[],["93","94"],"D:\\MERN_Stack test\\frontend\\src\\reportWebVitals.js",[],"D:\\MERN_Stack test\\frontend\\src\\App.js",["95"],"D:\\MERN_Stack test\\frontend\\src\\Components\\NavBar.jsx",[],"D:\\MERN_Stack test\\frontend\\src\\Components\\AddUser.jsx",["96"],"D:\\MERN_Stack test\\frontend\\src\\Components\\AllUsers.jsx",["97"],"D:\\MERN_Stack test\\frontend\\src\\Components\\EditUser.jsx",["98","99"],"D:\\MERN_Stack test\\frontend\\src\\Components\\NotFound.jsx",[],"D:\\MERN_Stack test\\frontend\\src\\Components\\CodeForStyle.jsx",[],"D:\\MERN_Stack test\\frontend\\src\\Service\\api.js",[],{"ruleId":"100","severity":1,"message":"101","line":2,"column":25,"nodeType":"102","messageId":"103","endLine":2,"endColumn":31},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":3,"column":39,"nodeType":"102","messageId":"103","endLine":3,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":32,"column":8,"nodeType":"108","endLine":32,"endColumn":10,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"110","line":40,"column":15,"nodeType":"102","messageId":"103","endLine":40,"endColumn":23},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":25,"nodeType":"102","messageId":"103","endLine":2,"endColumn":31},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":3,"column":39,"nodeType":"102","messageId":"103","endLine":3,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":33,"column":8,"nodeType":"108","endLine":33,"endColumn":10,"suggestions":"115"},{"ruleId":"100","severity":1,"message":"110","line":41,"column":15,"nodeType":"102","messageId":"103","endLine":41,"endColumn":23},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserDetails'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'response' is assigned a value but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],["119"],{"desc":"120","fix":"121"},"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"122"},"Update the dependencies array to be: [loadUserDetails]",{"range":"123","text":"124"},{"range":"125","text":"124"},[833,835],"[loadUserDetails]",[856,858]]